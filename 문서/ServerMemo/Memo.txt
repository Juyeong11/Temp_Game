서버에서 유저 이동 구현
- 클라이언트는 물리엔진을 이용해 이동함
	- 서버에서 클라이언트의 이동을 검증하려면 최소한의 공식 필요
		- 질량, 중력, 가속도 공식
- 로컬유저가 리모트 유저를 볼 때 좌표가 실제와 정확하게 일치해야한다.
	- 리모트 유저의 키가 눌렸음을 로컬유저에게 알려줘 클라이언트에서 알아서 물리 시뮬레이션을 하게한다.
	- 동작하기 위한 조건
		- 클라와 서버가 같은 공식을 이용해 물체의 움직임을 계산해야한다.
	- 네트워크 지연, 서버 렉을 고려해야할까?
 
서버에서 클라이언트의 충돌 구현
- 맵을 2차원 타일 좌표(20x20)로 만든다.
	- 충돌 했다고 클라이언트에서 패킷이 왔을 때, 해당 영역에 리모트 유저가 있는지 검사하는 것으로 충돌에 대한 해킹 체크를 한다.
	- 이동 중에 충돌하면요?
		- 그러게요 물리용 스레드가 필요하겠는걸요?
- 충돌로 인한 위치 이동은 어떻게 구현할 것인지?
	- 방법 1. 전적으로 클라의 계산을 믿는다.
	- 방법 2. 클라이언트의 충돌까지 계산한다. -> 이걸로 해보자(동접은 모르겠고 해보고싶은거 해보자고ㅋㅋ)
		- 물리용 스레드 만들고 거기서 물리 시뮬레이션을 해보자
		- 직접 구현은 안될 것 같고 라이브러리 사용해보자 box2d 일로와
			- box2d코드 Server에 넣음


데드 레커닝
KeyDown
 이동 시작 패킷 전송(1회)
KeyUp
 이동 끝 패킷 전송(1회)

서버에서 계산할 동안 클라에서 자체적으로 계산 후 이동 결과 전송
  -> 간단한 위치 검사만하고 오차가 크지 않으면 서버의 계산을 믿자(클라이언트의 계산을 믿으면 리모트 유저에게 위치를 다시 전송해야하는 문제가 있음))
  -> 리모트의 이동은?
          서버에서 이동 시작패킷 받고 리모트 유저들한테 뿌리고 리모트는 각자 계산 시작
          이동 끝 패킷 받으면 리모트 유저들은 계산 종료 이제 각자 물리엔진에 의해 남은 물리량 만큼 이동
              -> 최종적으로는 서버의 계산 결과 위치로 이동하도록

모든 이동을 기록하고 서버로 보내기 위한 자료구조가 필요할 것으로 보임
        이동 시작 -> 충돌 -> 이동 끝 -> 점프 -> 충돌
	이 자료구조는 한 프레임마다 변경사항이 있다면 서버로 flush되며 이동 상태를 전송한다.
		이동의 경우 시작과 끝이 있고 그 시간동안 운동량이 달라지므로 방향만 보낸다. -> 눌리고 있는동안 계속 계산
		충돌은 전적으로 서버가 계산하도록하자 클라는 계산하고 있다가 서버에서 결과가 오면 자신의 결과랑 보간하도록
		충돌이 있었다는 걸 서버에 알려주기만하고 서버는 그 정보를 가지고 자신의 결과와 오차가 있는지 확인만하자
	
	
처음 이동의 시작을 알리는 곳
	클라이언트에서 알림
		입력에 의한 이동, 충돌 여부
	서버에서 알림
		충돌 결과, 오브젝트 변경에 의한 이동(땅꺼짐?, 움직이는 장애물)
	
	물리엔진을 사용하는 만큼 확실한 충돌처리가 필요
	오차없이 충돌을 계산할 방법 계속 고민해보자
